AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  clubes-api-go
  
  Sample SAM Template for clubes-api-go

  # parameter名はアンダースコア使えない（ぽい）
Parameters:
  AwsAccessKey:
    Type: String
  AwsSecretAccessKey:
    Type: String
  ConsumerKey:
    Type: String
  ConsumerSecret:
    Type: String
  AccessToken:
    Type: String
  AccessTokenSecret:
    Type: String

  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
  Api:
    Cors:
      AllowMethods: "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'"
      AllowHeaders: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: "'*'"

Resources:
  GetTweetFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: main/get-tweets/
      Handler: main
      Runtime: go1.x
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /tweets
            Method: GET
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          AWS_ACCEESS_KEY: !Ref AwsAccessKey
          AWS_SECRET_ACCEESS_KEY: !Ref AwsSecretAccessKey
          CONSUMER_KEY: !Ref ConsumerKey
          CONSUMER_SECRET: !Ref ConsumerSecret
          ACCESS_TOKEN: !Ref AccessToken
          ACCESS_TOKEN_SECRET: !Ref AccessTokenSecret
  SearchTweetFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: main/search-tweets/
      Handler: main
      Runtime: go1.x
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /tweets/search
            Method: GET
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          AWS_ACCEESS_KEY: !Ref AwsAccessKey
          AWS_SECRET_ACCEESS_KEY: !Ref AwsSecretAccessKey
          CONSUMER_KEY: !Ref ConsumerKey
          CONSUMER_SECRET: !Ref ConsumerSecret
          ACCESS_TOKEN: !Ref AccessToken
          ACCESS_TOKEN_SECRET: !Ref AccessTokenSecret

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  TweetAPI:
    Description: "API Gateway endpoint URL for Prod environment for First Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  GetTweetFunction:
    Description: "First Lambda Function ARN"
    Value: !GetAtt GetTweetFunction.Arn
  GetTweetFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt GetTweetFunctionRole.Arn
  SearchTweetFunction:
    Description: "First Lambda Function ARN"
    Value: !GetAtt SearchTweetFunction.Arn
  SearchTweetFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt SearchTweetFunctionRole.Arn
